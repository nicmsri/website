---
title: "Joining data & communicating results with Quarto"
subtitle: "CVEN 5837 - Summer 2023"
author: "Lars Schöbitz"
format: 
  revealjs: 
    theme: slides.scss
    transition: fade
    slide-number: true
    logo: img/logo.png
    footer: "https://cven5873-ss23.github.io/website/"
editor: source
execute:
  freeze: auto
params:
    week: 6
---


```{r}
library(tidyverse)
library(knitr)

ggplot2::theme_set(ggplot2::theme_gray(base_size = 16))

```

# Learning Objectives (for this week)

```{r}

lobj1 <- readr::read_csv(here::here("data/tbl-02-cven5837-ss23-learning-objectives.csv")) |>
  dplyr::filter(week == params$week) |>
  dplyr::pull(learning_objectives)

```

1. `r lobj1[1]`
2. `r lobj1[2]`
3. `r lobj1[3]`
4. `r lobj1[4]`

# Part 1: Joining data {background-color="#0F4C81"}

##  We... {.smaller}

...have multiple data frames

...want to bring them together

```{r}
#| echo: false 

professions <- read_csv(here::here("slides/data/scientists/professions.csv")) 

dates <- read_csv(here::here("slides/data/scientists/dates.csv")) 

works <- read_csv(here::here("slides/data/scientists/works.csv")) 
```

```{r}
#| echo: true
#| eval: false
professions <- read_csv(here::here("data/scientists/professions.csv")) 
dates <- read_csv(here::here("data/scientists/dates.csv")) 
works <- read_csv(here::here("scientists/works.csv")) 
```

## Data: Women in science {.smaller}

Information on 10 women in science who changed the world

```{r echo=FALSE}
professions %>% select(name) %>% kable()
```

::: aside
Source: [Discover Magazine](https://www.discovermagazine.com/the-sciences/meet-10-women-in-science-who-changed-the-world)
:::

## Inputs {.smaller}

::: {.panel-tabset}

### professions

```{r}
professions |> kable()
```

### dates

```{r}
dates |> kable()
```

### works

```{r}
works |> kable()
```

:::

## Desired output {.smaller}

```{r}
professions %>%
  left_join(dates) %>%
  left_join(works) |> 
  kable()
```

## Inputs, reminder {.smaller}

:::: {.columns}

::: {.column width="47.5%"}
```{r}
#| echo: true
names(professions)
names(dates)
names(works)
```
:::

::: {.column width="5%"}

:::

::: {.column width="47.5%"}
```{r}
#| echo: true
nrow(professions)
nrow(dates)
nrow(works)
```
:::

::::

# Joining data frames {background-color="#0F4C81"}

## Joining data frames

```{r}
#| echo: true
#| eval: false
something_join(x, y)
```

- `left_join()`: all rows from x
- `right_join()`: all rows from y
- `full_join()`: all rows from both x and y
- ...

## Setup {.smaller}

For the next few slides...

:::: {.columns}

::: {.column width="47.5%"}
```{r}
#| echo: true
x <- tibble(
  id = c(1, 2, 3),
  value_x = c("x1", "x2", "x3")
  )
```

```{r}
#| echo: true
x
```
:::

::: {.column width="5%"}

:::

::: {.column width="47.5%"}
```{r}
#| echo: true
y <- tibble(
  id = c(1, 2, 4),
  value_y = c("y1", "y2", "y4")
  )
```
```{r}
#| echo: true
y
```
:::

::::

## `left_join()` {.smaller}

:::: {.columns}

::: {.column width="47.5%"}
```{r echo=FALSE, out.width="80%", out.extra ='style="background-color: #FDF6E3"'}
include_graphics("img/lec-05/left-join.gif")
```
:::

::: {.column width="5%"}

:::

::: {.column width="47.5%"}
```{r}
#| echo: true
left_join(x, y)
```
:::

::::

## `left_join()` {.smaller}

```{r}
#| echo: true
#| eval: false
professions %>%
  left_join(dates) 
```

```{r}
#| echo: false
professions %>%
  left_join(dates) |> 
  kable()
```

## `right_join()` {.smaller}

:::: {.columns}

::: {.column width="47.5%"}
```{r echo=FALSE, out.width="80%", out.extra ='style="background-color: #FDF6E3"'}
include_graphics("img/lec-05/right-join.gif")
```
:::

::: {.column width="5%"}

:::

::: {.column width="47.5%"}
```{r}
#| echo: true
right_join(x, y)
```
:::

::::

## `right_join()` {.smaller}

```{r}
#| echo: true
#| eval: false
professions %>%
  right_join(dates)
```

```{r}
#| echo: false
professions %>%
  right_join(dates) |> 
  kable()
```

## `full_join()` {.smaller}

:::: {.columns}

::: {.column width="47.5%"}
```{r echo=FALSE, out.width="80%", out.extra ='style="background-color: #FDF6E3"'}
include_graphics("img/lec-05/full-join.gif")
```
:::

::: {.column width="5%"}

:::

::: {.column width="47.5%"}
```{r}
#| echo: true
full_join(x, y)
```
:::

::::

## `full_join()` {.smaller}


```{r}
#| echo: true
#| eval: false
dates %>%
  full_join(works) 
```

```{r}
#| echo: false
dates %>%
  full_join(works) |> 
  kable()
```

## Putting it altogether {.smaller}

```{r}
#| echo: true
#| eval: false
professions %>%
  left_join(dates) %>%
  left_join(works) |> 
  kable()
```

```{r}
#| echo: false
professions %>%
  left_join(dates) %>%
  left_join(works) |> 
  kable()
```

# Part 2: Communicate results with Quarto {background-color="#0F4C81"}

## Why Quarto? -> Open Science

##

![](img/lec-05/publisher-policies-01.drawio.svg)

##

![](img/lec-05/publisher-policies-02.drawio.svg)

##

![](img/lec-05/publisher-policies-03.drawio.svg)

##

![](img/lec-05/publisher-policies-04.drawio.svg)

##

![](img/lec-05/publisher-policies-05.drawio.svg)

##

![](img/lec-05/publisher-policies-06.drawio.svg)

##

![](img/lec-05/publisher-policies-07.drawio.svg)

# What is Quarto? {background-color="#0F4C81"}

##  {.centered auto-animate="true"}

::: {style="margin-top: 50px; font-size: 2em; color: #0F4C81"}
Quarto is a new, open-source,<br> scientific and technical<br> publishing system
:::


**the goal is to make the process of creating**<br> and collaborating dramatically better


::: {.fragment .fade-up}
![](img/lec-05/horst_quarto_schematic.png){fig-align="center" width="1100px" fig-alt="A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto."}
:::

::: footer
Artwork from "Hello, Quarto" keynote by Julia Lowndes and Mine Çetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by [Allison Horst](https://github.com/allisonhorst).

:::

## Quarto for literate programming

::: r-stack

![](img/lec-05/qmd-knitr.jpeg){.fragment width="1800" fig-alt="diagram of converting a Qmd document via knitr/pandoc into markdown and then into output formats"}

![](img/lec-05/qmd-jupyter.jpeg){.fragment width="1800" fig-alt="diagram of converting a Quarto document via Jupyter/pandoc into markdown and then into output formats"}

:::

## What is a `.qmd`? {.smaller}

> A Quarto document i.e. a `.qmd` is a plain text file

. . .

**Metadata (YAML)**

:::: {.columns}

::: {.column width="50%"}
``` yaml
format: html
engine: knitr
```

:::

::: {.column width="50%"}

``` yaml
format: html
engine: jupyter
```

:::

::::

. . .

**Code**

:::: {.columns}

::: {.column width="50%"}

````code
```{{r}}
library(dplyr)

mtcars |> 
  dplyr::group_by(cyl) |> 
  dplyr::summarize(mean = mean(mpg))
```
````

:::

::: {.column width="50%"}

````code
```{{python}}
from siuba import _, group_by, summarize
from siuba.data import mtcars
(mtcars
  >> group_by(_.cyl)
  >> summarize(avg_mpg = _.mpg.mean())
  )
```
````

:::

::::

. . .

**Text**

``` markdown
# Heading 1
This is a sentence with some **bold text**, some *italic text* and an 
![image](image.png){fig-alt="Alt text for this image"}.
```

## Quarto makes moving between formats straightforward {.smaller .takeaway}

::: columns
::: {.column width="33%"}
::: fragment
Document

::: {.code-file .sourceCode .cell-code}
{{< fa file >}} lesson-1.qmd
:::

``` yaml
title: "Lesson 1"
format: html
```
:::
:::

::: {.column width="33%"}
::: fragment
Presentation

::: {.code-file .sourceCode .cell-code}
{{< fa file >}} lesson-1.qmd
:::

``` yaml
title: "Lesson 1"
format: revealjs
```
:::
:::

::: {.column width="33%"}
::: fragment
Website

::: {.code-file .sourceCode .cell-code}
{{< fa file >}} \_quarto.yml
:::

``` yaml
project:
  type: website

website: 
  navbar: 
    left:
      - lesson-1.qmd
```
:::
:::
:::

::: notes
-   It is traightforward in Quarto to move between output formats
-   As an educator, there are two things that are important to me
    -   reproducibility, and
    -   ease of transitiion between output formats
-   I am using Quarto for everything, and it's finally the tool let's me go from one output type to anoher without the to change anything by the YAML metadata

For example, here are common things I produce

--\> a lesson in document form <br> --\> the same content in presentation form <br> --\> the same content on a page in a website,

and you can see that all that needed to change going between these formats is a few lines in the yaml.

No slide breaks to remove, no citation style to change, no headings to re-level. This ease of transition has freed up time to focus my time on content, and that, folks, is the dream!
:::

## Comfort of your own workspace

::: r-stack
![](https://quarto.org/docs/tools/images/rstudio-preview.png){.fragment width="1700px" fig-alt="A screenshot of a Quarto document rendered inside RStudio"}

![](https://quarto.org/docs/tools/images/jupyterlab-preview.png){.fragment width="1700px" fig-alt="A screenshot of a Quarto document rendered inside JupyterLab"}

![](https://quarto.org/docs/computations/images/python-vscode.png){.fragment width="1700px" fig-alt="A screenshot of a Quarto document rendered inside VSCode"}
:::

## Rich Documentation

[![](img/lec-05/website-quarto.png){fig-alt="Screenshot of the Quarto homepage at https://quarto.org/." fig-align="center"}](https://quarto.org/)

# Live Coding Exercise: Write a report {background-color="#0F4C81"}

## Clone GitHub repository from GitHub

1. Open the GitHub Organisation for the course: <https://github.com/cven5873-ss23/>
2. Locate the **wk-06** repository with your username `wk-06-GITHUB-USERNAME`
3. Follow along with me

# Break 

![](img/lec-01/coffee-break.jpg)

```{r}

countdown::countdown(
  minutes = 10, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::

## Cross-references {.smaller .scrollable}

- no space between `{r}` and `#| tbl-cap: "A table"`
- spelling tbl not tab
- no spaces (use dashes in `label`)

See @tbl-simple-table...

```{r}
#| tbl-cap: "A table"
#| label: tbl-simple-table
#| echo: fenced

tibble(
  id = c(1, 2, 3),
  name = c("X", "Y", "Z")
) %>% 
  knitr::kable()
```


# Homework week 5 {background-color="#0F4C81"}

## Homework due dates

- All material on [course website](https://cven5873-ss23.github.io/website/weeks/wk-05.html)
- Homework assignment & learning reflection due: **Friday, 14th July**

# Capstone Project Report

## Information

- All material shared on website by Monday, 17th July
- Due date for report: Friday, 28th July

# Thanks! `r emo::ji("sunflower")`  {background-color="#0F4C81"}

## 

A large proportion of these slides are taken from [Mine Çetinkaya Rundel's "Hello Quarto" presentation](https://mine.quarto.pub/hello-quarto/#/hello-quarto-title) & [Thomas Mock's "Quarto for the Curious" presentation](https://jthomasmock.github.io/quarto-presentation/#/TitleSlide)

Slides created via revealjs and Quarto: https://quarto.org/docs/presentations/revealjs/ 
Access slides as [PDF on GitHub](https://github.com/cven5873-ss23/website/raw/main/slides/lec-05-communicate.pdf)

All material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/). 


