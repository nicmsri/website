{
  "hash": "70d780e389ffb89f0e7e5e68d6e70ba7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"{{< var md-03.title >}}\"\nsubtitle: \"{{< var course.long-title >}}\"\nauthor: \"{{< var author >}}\"\ndate: \"2025-03-06\"\nformat: \n  revealjs: \n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\nfooter: \"[{{< fa link >}} {{< var course.site-short >}}]({{< var course.site >}})\"\neditor: source\nexecute:\n  freeze: auto\nparams:\n    module: 3\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n## Learning Objectives (for this week)\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n1. Learners can apply ten functions from the dplyr R Package to generate a subset of data for use in a table or plot.\n:::\n\n\n\n# Data wrangling with dplyr  {background-color=\"#4C326A\"}\n\n## A grammar of data wrangling... {.smaller}\n\n... based on the concepts of functions as verbs that manipulate data frames\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n\n\n::: {.cell caption='dplyr is part of the tidyverse'}\n::: {.cell-output-display}\n![](img/lec-03/dplyr-part-of-tidyverse.png){width=70%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"60%\"}\n\n- `select`: pick columns by name\n- `arrange`: reorder rows\n- `filter`: pick rows matching criteria\n- `relocate`: changes the order of the columns\n- `mutate`: add new variables\n- `summarise`: reduce variables to values\n- `group_by`: for grouped operations\n- ... (many more)\n:::\n\n::::\n\n::: {.aside}\nSlide taken from [Data Science in a Box](https://datasciencebox.org/)\n:::\n\n## dplyr rules\n\nRules of `dplyr` functions:\n\n::: {.incremental}\n\n- First argument is always a data frame\n- Subsequent arguments say what to do with that data frame\n- Always return a data frame  \n- Don't modify in place \n\n:::\n\n## Functions & Arguments {auto-animate=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\nlibrary(dplyr)\n\nfilter(.data = gapminder, \n       year == 2007)\n```\n:::\n\n\n\n-   Function: `filter()`\n-   Argument: `.data =`\n-   Arguments following: `year == 2007` [What to do with the data]{.highlight-yellow}\n\n## Objects {auto-animate=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\nlibrary(dplyr)\n\ngapminder_2007 <- filter(.data = gapminder, \n                            year == 2007)\n```\n:::\n\n\n\n-   Function: `filter()`\n-   Argument: `.data =`\n-   Arguments following: `year == 2007` [What to do with the data]{.highlight-yellow}\n-   Data (Object): `gapminder_2007`\n\n## Operators {auto-animate=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\nlibrary(dplyr)\n\ngapminder_2007 <- gapminder |> \n  filter(year == 2007) \n```\n:::\n\n\n\n-   Function: `filter()`\n-   Argument: `.data =`\n-   Arguments following: `year == 2007` [What to do with the data]{.highlight-yellow}\n-   Data (Object): `gapminder_2007`\n-   Assignment operator: `<-`\n-   Pipe operator: `|>`\n\n## Plot {auto-animate=\"true\" .smaller}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4,6\"}\nlibrary(dplyr)\n\ngapminder_2007 <- gapminder |> \n  filter(year == 2007) \n\nggplot(data = gapminder_2007,\n       mapping = aes(x = continent,\n                     y = lifeExp,\n                     fill = continent)) +\n  geom_boxplot(outlier.shape = NA) \n```\n\n::: {.cell-output-display}\n![](lec-03-transformation_files/figure-revealjs/unnamed-chunk-7-1.png){width=384}\n:::\n:::\n\n\n\n# Our turn: SDG 6.2.1 {background-color=\"#4C326A\"}\n\n## Data {.smallest}\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(sanitation)\n```\n:::\n\n\n\n<br>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|name        |iso3 | year|region_sdg                |varname_short |varname_long                |residence | percent|\n|:-----------|:----|----:|:-------------------------|:-------------|:---------------------------|:---------|-------:|\n|Afghanistan |AFG  | 2000|Central and Southern Asia |san_bas       |basic sanitation services   |national  |    21.9|\n|Afghanistan |AFG  | 2000|Central and Southern Asia |san_bas       |basic sanitation services   |rural     |    19.3|\n|Afghanistan |AFG  | 2000|Central and Southern Asia |san_bas       |basic sanitation services   |urban     |    30.9|\n|Afghanistan |AFG  | 2000|Central and Southern Asia |san_lim       |limited sanitation services |national  |     5.6|\n|Afghanistan |AFG  | 2000|Central and Southern Asia |san_lim       |limited sanitation services |rural     |     3.1|\n|Afghanistan |AFG  | 2000|Central and Southern Asia |san_lim       |limited sanitation services |urban     |    14.5|\n\n\n:::\n:::\n\n\n\n<br>\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(sanitation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n\n\n<br>\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(sanitation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 73710\n```\n\n\n:::\n:::\n\n\n\n## Data {.smaller}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsanitation |> \n  count(varname_short, varname_long)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|varname_short |varname_long                       |     n|\n|:-------------|:----------------------------------|-----:|\n|san_bas       |basic sanitation services          | 14742|\n|san_lim       |limited sanitation services        | 14742|\n|san_od        |no sanitation facilities           | 14742|\n|san_sm        |safely managed sanitation services | 14742|\n|san_unimp     |unimproved sanitation facilities   | 14742|\n\n\n:::\n:::\n\n\n\n## Our turn: md-03-exercises\n\n::: task\n1. Open [posit.cloud](https://posit.cloud) in your browser.\n2. Open the [rbtl-fs25 workspace]{.highlight-yellow} for the course.\n3. Click [Start]{.highlight-yellow} next to [md-03-exercises]{.highlight-yellow}.\n4. In the File Manager in the bottom right window, locate the [`md-03a-data-transformation.qmd`]{.highlight-yellow} file and click on it to open it in the top left window.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_8d282a15\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n## Take a break\n\n[Please get up and move!]{.highlight-yellow} Let your emails rest in peace.\n\n![](img/lec-03/get-up-and-move.png){width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_c9d153e4\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n::: footer\nImage generated with [DALL-E 3 by OpenAI](https://openai.com/blog/dall-e/)\n:::\n\n## Your turn: md-03b-your-turn-filter.qmd\n\n::: task\n1. Open [posit.cloud](https://posit.cloud) in your browser.\n2. Open the [rbtl-fs25 workspace]{.highlight-yellow} for the course.\n3. In the File Manager in the bottom right window, locate the [`md-03b-your-turn-filter.qmd`]{.highlight-yellow} file and click on it to open it in the top left window.\n4. Follow instructions in the file\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_4d0a03c1\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n## R Terminology\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nsanitation_national_2020_sm <- sanitation |> \n  filter(residence == \"national\",\n         year == 2020,\n         varname_short == \"san_sm\")\n```\n:::\n\n\n\n-   Function: `filter()`\n-   Arguments following: `residence == \"national\", etc.` [What to do with the data]{.highlight-yellow}\n-   Data (Object): `sanitation_national_2020_sm`\n-   Assignment operator: `<-`\n-   Pipe operator: `|>`\n\n\n## Task 1.2\n\n1.  Use the `filter()` function to create a subset from the `sanitation` data containing urban and rural estimates for Nigeria.\n2.  Store the result as a new object in your environment with the name `sanitation_nigeria_urban_rural`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsanitation_nigeria_urban_rural <- sanitation |> \n  filter(name == \"Nigeria\", residence != \"national\")\n```\n:::\n\n\n\n## Task 1.3 - Connected scatterplot {}\n\n\n\n{{< fa thumbs-up >}} Great for timeseries data {{< fa calendar >}}\n\n\n\n\n::: small\n\n1.  Use the `ggplot()` function to create a connected scatterplot with `geom_point()` and `geom_line()` for the data you created in Task 1.2.\n\n2.  Use the `aes()` function to map the year variable to the x-axis, the `percent` variable to the y-axis, and the `varname_short` variable to color and group aesthetic.\n\n3.  Use `facet_wrap()` to create a separate plot urban and rural populations.\n\n4.  Change the colors using `scale_color_colorblind()`.\n\n:::\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nggplot(data = sanitation_nigeria_urban_rural,\n       mapping = aes(x = year, \n                     y = percent, \n                     group = varname_short, \n                     color = varname_short)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~residence) +\n  scale_color_colorblind() \n```\n\n::: {.cell-output-display}\n![](lec-03-transformation_files/figure-revealjs/unnamed-chunk-20-1.png){width=100%}\n:::\n:::\n\n\n\n## Our turn: back to md-03a-data-transformation.qmd\n\n::: task\n1. Open [posit.cloud](https://posit.cloud) in your browser.\n2. Open the [rbtl-fs25 workspace]{.highlight-yellow} for the course.\n3. Click [Start]{.highlight-yellow} next to [md-03-exercises]{.highlight-yellow}.\n4. In the File Manager in the bottom right window, locate the [`md-03a-data-transformation.qmd`]{.highlight-yellow} file and click on it to open it in the top left window.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_b6a1a37c\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">25</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n## Take a break\n\n[Please get up and move!]{.highlight-yellow} Let your emails rest in peace.\n\n![](img/lec-03/get-up-and-move.png){width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_2b86cde8\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n::: footer\nImage generated with [DALL-E 3 by OpenAI](https://openai.com/blog/dall-e/)\n:::\n\n## Your turn: md-03c-your-turn-summarise.qmd\n\n::: task\n1. Open [posit.cloud](https://posit.cloud) in your browser.\n2. Open the [rbtl-fs25 workspace]{.highlight-yellow} for the course.\n3. In the File Manager in the bottom right window, locate the [`md-03c-your-turn-summarise.qmd`]{.highlight-yellow} file and click on it to open it in the top left window.\n4. Follow instructions in the file\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_36c49b81\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">30</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n# Homework assignments module 3 {background-color=\"#4C326A\"}\n\n## Module 3 documentation\n\n::: learn-more\n[rbtl-fs25.github.io/website/modules/md-03.html](https://rbtl-fs25.github.io/website/modules/md-03.html)\n\n\n\n```{=html}\n<iframe src=\"https://rbtl-fs25.github.io/website/modules/md-03.html\" width=\"100%\" height=\"500\" style=\"border:2px solid #123233;\" title=\"Module 3 documentation\"></iframe>\n```\n\n\n:::\n\n## Homework due date\n\n-   Homework assignment due: [Wednesday, March 12th]{.highlight-yellow}\n-   Correction & feedback phase up to: Tuesday, March 18th \n\n# Wrap-up {background-color=\"#4C326A\"}\n\n## Thanks! 🌻 \n\nSlides created via revealjs and Quarto: https://quarto.org/docs/presentations/revealjs/ Access slides as [PDF on GitHub](https://github.com/rbtl-fs25/website/raw/main/slides/lec-03-transformation.pdf)\n\nAll material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/).\n",
    "supporting": [
      "lec-03-transformation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}